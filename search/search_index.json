{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"项目说明 ¶ 亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["项目","代码","月","0.0","计划","发布","内部","，","平台","."," ","低","亚鹿","信息","¶","10","sap","创世","2020","启动","研发","对外","说明","年","代号","1","版本","。","5"],"title":"Home","title_tokens":["home"]},{"location":"#_1","text":"亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["项目","代码","月","0.0","计划","发布","内部","，","平台","."," ","低","亚鹿","信息","10","sap","创世","2020","启动","研发","对外","年","代号","1","版本","。","5"],"title":"项目说明","title_tokens":["说明","项目"]},{"location":"contents/docsdev/","text":"创世项目文档 ¶ 准备 ¶ 下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸 添加中文支持 ¶ 进入python的安装目录修改search_index.py文件 ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data 修改lunr.js ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) } 通过MKDocs更新文档 ¶ 使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档并提交变更 使用MKDocs ¶ 打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve","text_tokens":["true","/","本地","config","}","documentcount","(","docref",":","def","）","ioerror","定位","popen","false","return","使用","dirname","versions","变更","abspath","\\","valueerror","下载","title","fieldname","install","error","trimmer","更新","路径","参考","m","fieldref","运行","entries","文档","created","doc","（","]","出现","docs","?","separators","token","loads","new","terms","conversion","__","项目","pip","templates","p","代码","编辑文档","not","path","搜索","中文","错误","site","，","mkdocs","并","进入","dumps"," ","文件","create","{","|","text","set","extractor","script","--","相对","in","as","创世","desktop","$","clone","修改","系统","0","no","try","object","添加","build","15","failed","run","lowcodeplatform","log","s","module","仅","built","format","sort",")","替换","\"","keys","err","oserror","serve","[","file","windows","修复","编辑","行","stdout","fields","if","subprocess","前",".","field","=","git","以下","jieba","支持","n","vs","^","yaluoo","encode","tokens","++","list","¶","code","_",";","lib","所在","packages","builder","var","安装","克隆","com","e","material","generate","dicts","prebuild","idx","hasattr","1","pipeline","解霸","remove","python3.7","index","-","lower","行将","资源库","prototype","为","ensure","+","for","data","attributes","this","communicate","search",",","stderr","打开","documents","os","ensurepip","相对路径","function","py","python","self","8","提交","pip3","的","successfully","else","mac","准备","cut","except","utf","资源","library","frameworks","切换","i","通过","js","github","framework","ref","update","length","join","至","warning","命令","<","upgrade","目录","null","3.7","pre","to","named","部分","page","add","debug","工具","replace","pipe","fieldterms","stdin","'","json","lunr","ascii","decode","node","https","如果","contrib"],"title":"项目文档","title_tokens":["文档","项目"]},{"location":"contents/docsdev/#_1","text":"","text_tokens":[],"title":"创世项目文档","title_tokens":["文档","创世","项目"]},{"location":"contents/docsdev/#_2","text":"下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸","text_tokens":["修复","pip","os","）","错误","，","ensurepip","mkdocs","python","使用","pip3"," ","jieba","mac","vs","下载","通过","--","install","error","github","更新","code","m","desktop","命令","upgrade","安装","named","no","material","工具","（","'","module","出现","如果","解霸","-"],"title":"准备","title_tokens":["准备"]},{"location":"contents/docsdev/#_3","text":"","text_tokens":[],"title":"添加中文支持","title_tokens":["添加","中文","支持"]},{"location":"contents/docsdev/#pythonsearch_indexpy","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data","text_tokens":["true","/","config","}","(",":","def","ioerror","popen","false","return","dirname","versions","abspath","\\","valueerror","title","error","路径","参考","entries","created","doc","]","docs","separators","token","loads","conversion","__","p","not","path","site","mkdocs","，","dumps"," ","{","text","set","script","相对","in","as","修改","系统","try","build","failed","log","built","format","sort",")","\"","keys","err","oserror","[","file","windows","stdout","if","subprocess",".","=","jieba","n","encode","tokens","list","_","lib","packages","e","generate","dicts","prebuild","idx","hasattr","remove","python3.7","lower","index","-","为","ensure","for","data","communicate","search",",","stderr","os","相对路径","python","self","8","successfully","else","mac","cut","except","utf","library","frameworks","js","framework","join","warning","目录","3.7","pre","to","page","debug","replace","pipe","stdin","json","'","contrib","decode","node","ascii"],"title":"进入python的安装目录修改search_index.py文件","title_tokens":["py","进入","python",".","的","_","文件","search","目录","修改","安装","index"]},{"location":"contents/docsdev/#lunrjs","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) }","text_tokens":["/","documentcount","}","(","docref",":","定位","return","versions","\\","trimmer","fieldname","fieldref","doc","]","?","token","new","terms","templates","代码","搜索","site","mkdocs"," ","create","{","|","extractor","$","0","run","object","15","s","仅","替换",")","keys","[","行","fields","前",".","field","=","以下","^","++","tokens","_",";","lib","packages","builder","var","1","pipeline","python3.7","-","prototype","为","+","attributes","this","for","search",",","documents","function","python","mac","library","frameworks","i","update","framework","ref","length","<","null","目录","3.7","部分","add","fieldterms","replace","'","lunr","contrib"],"title":"修改lunr.js","title_tokens":["lunr","js",".","修改"]},{"location":"contents/docsdev/#mkdocs","text":"使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档并提交变更","text_tokens":["资源库","/","编辑","编辑文档",":","并",".","提交","使用","git","变更"," ","yaluoo","资源","vs","github","code","命令","clone","克隆","com","文档","lowcodeplatform","docs","https","-"],"title":"通过MKDocs更新文档","title_tokens":["通过","文档","更新","mkdocs"]},{"location":"contents/docsdev/#mkdocs_1","text":"打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve","text_tokens":["serve","本地","文档","至"," ","命令","所在","目录","打开","运行","切换","行将","mkdocs"],"title":"使用MKDocs","title_tokens":["使用","mkdocs"]}]}