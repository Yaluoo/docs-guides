{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"项目说明 ¶ 亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["对外","sap",".","代码","启动","2020","说明","5","1","0.0","低","发布","代号","内部","项目","版本","研发","信息","¶","，","计划","创世","年","月","亚鹿"," ","10","平台","。"],"title":"项目说明","title_tokens":["项目","说明"]},{"location":"#_1","text":"亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["对外","sap",".","代码","启动","2020","5","1","0.0","低","发布","代号","内部","项目","版本","研发","信息","，","计划","创世","年","月","亚鹿"," ","10","平台","。"],"title":"项目说明","title_tokens":["项目","说明"]},{"location":"contents/docsdev/","text":"创世项目文档 ¶ 准备 ¶ 下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸 添加中文支持 ¶ 进入python的安装目录修改search_index.py文件 ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data 修改lunr.js ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) } 通过MKDocs更新文档 ¶ 使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档 使用Github Desktop提交变更 使用MKDocs ¶ 打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve 更新网页 mkdocs gh-deploy","text_tokens":["文件","tokens","built","search","lunr","decode","++","如果","8","i","至","文档","index","切换","克隆","to","upgrade","通过","p","打开","desktop","的","return","doc","documents","ioerror","deploy","if","准备","templates","pip3","new","valueerror","not","提交","，","text","参考","fieldterms","true","所在","stdout","ensure","$","for","15","format","）","资源","相对","self","abspath","material","|",";","debug","/","fieldref","lower","loads","pipeline","terms","err","支持","e","错误","create","false","0","in","def","-","build","replace","path","前","1","clone","资源库","工具","null","}","下载","pipe","popen","separators","keys","com","项目","data","ascii","attributes","lib","title","log","stdin","named","os","github","本地","?",":","builder","lowcodeplatform","length","else","python3.7","<","extractor","serve","部分","为","contrib","\\","versions","dirname","remove","'","sort","generate","yaluoo","conversion","created","{","出现","[","行","路径","mkdocs","as","s","代码","packages","windows","script","code","fieldname","系统","entries","修改","try","ensurepip","dicts","object","js","(","stderr","idx","编辑文档","添加","vs","3.7","config","相对路径","--","dumps","fields","prebuild","（","json","¶","framework","site","update","创世","docs","join","ref","m","library","pre",")","^","subprocess","运行","page","进入","utf","warning","docref","error","py","_",",","set","successfully","以下","网页","gh","目录","field",".","encode","__","communicate","python","mac","documentcount","module","编辑","failed","except","安装","no","jieba","]","oserror","更新","hasattr","run","https","替换","行将","file","使用","修复","解霸","install","仅","\"","this","var","node","定位","function","frameworks","list","命令","cut","变更","trimmer","n","pip","prototype","git"," ","中文","搜索","token","=","+","add"],"title":"项目文档管理工具","title_tokens":["项目","管理工具","文档","工具","理工","管理"]},{"location":"contents/docsdev/#_1","text":"","text_tokens":[],"title":"创世项目文档","title_tokens":["创世","项目","文档"]},{"location":"contents/docsdev/#_2","text":"下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸","text_tokens":["出现","错误","mkdocs","python","mac","如果","code","module","-","ensurepip","安装","no","jieba","更新","工具","下载","vs","upgrade","通过","desktop","使用","修复","解霸","--","install","pip3","named","（","os","github","，","命令","m","）","pip","material"," ","'","error"],"title":"准备","title_tokens":["准备"]},{"location":"contents/docsdev/#_3","text":"","text_tokens":[],"title":"添加中文支持","title_tokens":["添加","支持","中文"]},{"location":"contents/docsdev/#pythonsearch_indexpy","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data","text_tokens":["tokens","built","search","decode","8","index","to","p","return","doc","ioerror","if","valueerror","not","，","参考","true","stdout","ensure","for","format","相对","self","abspath","debug","/","lower","loads","err","e","false","in","def","-","build","replace","path","}","pipe","popen","separators","keys","ascii","data","lib","title","log","stdin","os",":","else","python3.7","=","为","contrib","\\","versions","dirname","remove","'","sort","generate","conversion","created","{","[","路径","mkdocs","as","packages","windows","script","系统","entries","修改","try","dicts","js","(","stderr","idx","3.7","config","相对路径","dumps","prebuild","json","framework","site","docs","join","library","pre",")","subprocess","page","utf","warning","set",",","_","error","successfully","目录",".","encode","__","communicate","python","mac","failed","except","jieba","]","oserror","hasattr","file","\"","node","frameworks","list","cut","n"," ","token","text"],"title":"进入python的安装目录修改search_index.py文件","title_tokens":["的","目录","安装","index",".","文件","search","python","进入","_","py","修改"]},{"location":"contents/docsdev/#lunrjs","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) }","text_tokens":["tokens","search","lunr","++","i","documents","return","doc","templates","new","fieldterms","token","$","for","15","|",";","/","fieldref","pipeline","terms","create","0","-","replace","前","1","null","}","keys","attributes","lib","?",":","builder","length","python3.7","<","extractor","部分","为","contrib","\\","versions","'","{","行","[","mkdocs","s","代码","packages","搜索","fieldname","object","(","3.7","fields","framework","site","update","ref","library","^",")","docref",",","_","以下","目录",".","python","mac","documentcount","]","run","替换","仅","this","var","function","frameworks","trimmer","prototype"," ","field","定位","=","+","add"],"title":"修改lunr.js","title_tokens":[".","lunr","js","修改"]},{"location":"contents/docsdev/#mkdocs","text":"使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档 使用Github Desktop提交变更","text_tokens":[".","code","编辑","-","文档","clone","资源库","编辑文档","克隆","vs","https","com","desktop","使用","github","提交",":","lowcodeplatform","docs","命令","变更","资源","git"," ","/","yaluoo"],"title":"通过MKDocs更新文档","title_tokens":["mkdocs","文档","更新","通过"]},{"location":"contents/docsdev/#mkdocs_1","text":"打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve 更新网页 mkdocs gh-deploy","text_tokens":["打开","运行","命令","目录","至","文档","serve","网页","切换","deploy","更新","mkdocs"," ","本地","gh","所在","行将","-"],"title":"使用MKDocs","title_tokens":["使用","mkdocs"]},{"location":"contents/markdown_syntax/","text":"Markdown语法 ¶","text_tokens":["markdown"," ","语法","¶"],"title":"Markdown语法","title_tokens":["markdown","语法"]},{"location":"contents/markdown_syntax/#markdown","text":"","text_tokens":[],"title":"Markdown语法","title_tokens":["markdown","语法"]}]}