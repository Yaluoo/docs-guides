{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"项目说明 ¶ 亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["."," ","发布","sap","。","信息","说明","启动","年","研发","10","¶","创世","对外","代号","项目","代码","低","5","平台","0.0","月","亚鹿","，","2020","计划","内部","1","版本"],"title":"项目说明","title_tokens":["说明","项目"]},{"location":"#_1","text":"亚鹿信息内部启动SAP低代码平台研发项目，代号 创世 ，项目计划2020年5月启动，2020年10月对外发布平台0.0.1版本。","text_tokens":["."," ","发布","sap","。","信息","启动","年","研发","10","创世","对外","代号","项目","代码","低","5","平台","0.0","月","亚鹿","，","2020","计划","内部","1","版本"],"title":"项目说明","title_tokens":["说明","项目"]},{"location":"contents/docsdev/","text":"创世项目文档 ¶ 准备 ¶ 下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸 添加中文支持 ¶ 进入python的安装目录修改search_index.py文件 ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data 修改lunr.js ¶ Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) } 通过MKDocs更新文档 ¶ 使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档并提交变更 使用MKDocs ¶ 打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve","text_tokens":["所在","ioerror","准备","clone","self","定位","切换","to","相对","i","资源","vs","replace","serve","upgrade","路径","如果","stderr","打开","valueerror","3.7","系统","行",",","前","add","替换","安装","stdout","packages","created","fields","]","extractor","pip","builder","更新","py","conversion","pipeline","code","克隆","remove","templates","path","__","仅","至","0","n","运行","tokens","desktop","return","解霸","通过","lower","length","++","json","sort","false","目录","documentcount","attributes","frameworks","script","-","出现","decode","https","library","修复","文档","<","工具","git","使用","build","修改","github","为","in","prebuild","m","utf","log","install","versions","创世",":","\\","lowcodeplatform","debug","generate","named","fieldref","项目","null","docs","行将","^","title","错误","dicts","支持","8","as","+","keys","fieldterms","lib","ascii","15","contrib",";","else","stdin","{","try","|","docref","search","material","提交","index","windows",")","编辑","下载","文件","\"","}","built","create","ensure","list","cut","搜索","$","（","的","entries","编辑文档","loads","p","python","pip3","--","并","e","var","）","popen","中文","prototype","?","warning","部分","new","set","pipe","mkdocs","page","pre","update","field","config","js","separators","，","successfully","lunr","true","format","not","data","node","资源库","trimmer","变更","no"," ",".","[","subprocess","terms","run","for","idx","os","com","yaluoo","abspath","'","join","except","ensurepip","encode","本地","fieldname","mac","file","dumps","text","jieba","dirname","_","this","=","¶","communicate","/","if","参考","(","documents","framework","代码","token","s","module","oserror","site","相对路径","def","hasattr","doc","进入","python3.7","failed","error","命令","添加","ref","object","err","function","1","以下"],"title":"项目文档","title_tokens":["文档","项目"]},{"location":"contents/docsdev/#_1","text":"","text_tokens":[],"title":"创世项目文档","title_tokens":["文档","项目","创世"]},{"location":"contents/docsdev/#_2","text":"下载 安装Github Desktop 下载 安装Python 下载 安装VS Code 通过 pip install --upgrade pip 更新Python安装工具（Mac OS使用 pip3 ），如果出现 No module named 'pip' error 错误，通过命令 python -m ensurepip 修复 使用命令 pip install mkdocs 安装MKDocs 使用命令 pip install mkdocs-material 安装mkdocs-material 使用命令 pip install jieba 安装解霸","text_tokens":["no"," ","-","出现","os","material","'","修复","ensurepip","mac","vs","工具","下载","upgrade","jieba","使用","如果","github","m","（","install","python","pip3","--","）","安装","named","pip","更新","code","mkdocs","错误","module","desktop","，","解霸","通过","error","命令"],"title":"准备","title_tokens":["准备"]},{"location":"contents/docsdev/#_3","text":"","text_tokens":[],"title":"添加中文支持","title_tokens":["中文","支持","添加"]},{"location":"contents/docsdev/#pythonsearch_indexpy","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/，修改generate_search_index ，Windows系统参考相对路径 def generate_search_index ( self ): \"\"\"python to json conversion\"\"\" page_dicts = { 'docs' : self . _entries , 'config' : self . config } for doc in page_dicts [ 'docs' ]: tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'title' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'title_tokens' ] = tokens tokens = list ( set ([ token . lower () for token in jieba . cut_for_search ( doc [ 'text' ] . replace ( ' \\n ' , '' ), True )])) if '' in tokens : tokens . remove ( '' ) doc [ 'text_tokens' ] = tokens data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) if self . config [ 'prebuild_index' ]: try : script_path = os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), 'prebuild-index.js' ) p = subprocess . Popen ( [ 'node' , script_path ], stdin = subprocess . PIPE , stdout = subprocess . PIPE , stderr = subprocess . PIPE ) idx , err = p . communicate ( data . encode ( 'utf-8' )) if not err : idx = idx . decode ( 'utf-8' ) if hasattr ( idx , 'decode' ) else idx page_dicts [ 'index' ] = json . loads ( idx ) data = json . dumps ( page_dicts , sort_keys = True , separators = ( ',' , ':' ), ensure_ascii = False ) log . debug ( 'Pre-built search index created successfully.' ) else : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( err )) except ( OSError , IOError , ValueError ) as e : log . warning ( 'Failed to pre-build search index. Error: {} ' . format ( e )) return data","text_tokens":["ioerror","self","to","相对","replace","路径","stderr","valueerror","3.7","系统",",","stdout","packages","created","]","conversion","remove","path","__","n","tokens","return","lower","json","sort","false","目录","frameworks","script","-","decode","library","build","修改","为","in","prebuild","utf","log","versions","\\",":","debug","generate","docs","title","dicts","8","as","keys","ascii","lib","contrib","else","stdin","{","try","search","index","windows",")","}","\"","built","ensure","list","cut","entries","loads","p","python","e","popen","warning","set","pipe","mkdocs","page","pre","config","js","separators","，","successfully","true","format","not","data","node","."," ","[","subprocess","for","idx","os","abspath","'","join","except","encode","mac","file","dumps","text","jieba","dirname","_","=","communicate","/","if","参考","(","framework","token","oserror","site","相对路径","def","hasattr","doc","python3.7","failed","error","err"],"title":"进入python的安装目录修改search_index.py文件","title_tokens":["安装",".","文件","修改","_","search","进入","的","index","py","python","目录"]},{"location":"contents/docsdev/#lunrjs","text":"Mac目录为 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/mkdocs/contrib/search/templates/search/ 搜索lunr.Builder.prototype.add替换部分代码 // 仅替换前15行 lunr . Builder . prototype . add = function ( doc , attributes ) { var docRef = doc [ this . _ref ], fields = Object . keys ( this . _fields ) this . _documents [ docRef ] = attributes || {} this . documentCount += 1 for ( var i = 0 ; i < fields . length ; i ++ ) { var fieldName = fields [ i ], extractor = this . _fields [ fieldName ]. extractor , field = extractor ? extractor ( doc ) : doc [ fieldName ], tokens = doc [ fieldName + '_tokens' ], terms = this . pipeline . run ( tokens ), fieldRef = new lunr . FieldRef ( docRef , fieldName ), fieldTerms = Object . create ( null ) 搜索定位替换以下部分 lunr . trimmer = function ( token ) { return token . update ( function ( s ) { return s . replace ( /^\\s+/ , '' ). replace ( /\\s+$/ , '' ) }) }","text_tokens":["定位","i","replace","3.7","行",",","前","add","替换","packages","fields","]","extractor","builder","pipeline","templates","仅","0","tokens","return","length","++","documentcount","目录","attributes","frameworks","-","library","<","为","versions","\\",":","fieldref","null","^","+","keys","fieldterms","lib",";","15","contrib","{","|","docref","search",")","}","create","搜索","$","python","var","prototype","?","部分","new","update","mkdocs","field","lunr","trimmer","."," ","[","terms","run","for","'","fieldname","mac","_","this","=","/","(","documents","framework","代码","token","s","site","doc","python3.7","ref","object","function","1","以下"],"title":"修改lunr.js","title_tokens":["lunr","修改",".","js"]},{"location":"contents/docsdev/#mkdocs","text":"使用命令 git clone https://github.com/Yaluoo/docs-LowCodePlatform.git 克隆资源库 使用VS Code编辑文档并提交变更","text_tokens":["资源库","."," ","-","com","clone","https","yaluoo","提交","资源","文档","vs","编辑","git","使用","github","编辑文档","并","lowcodeplatform","/",":","docs","克隆","code","命令","变更"],"title":"通过MKDocs更新文档","title_tokens":["mkdocs","文档","更新","通过"]},{"location":"contents/docsdev/#mkdocs_1","text":"打开命令行将目录切换至文档所在目录 本地运行 mkdocs serve","text_tokens":["所在","运行","serve"," ","打开","切换","行将","命令","至","本地","文档","目录","mkdocs"],"title":"使用MKDocs","title_tokens":["mkdocs","使用"]}]}